{
  "openapi": "3.0.1",
  "info": {
    "title": "NLPearl Client API",
    "description": "A sample API that demonstrates features in the OpenAPI specification",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://NlpearlApi.com",
      "description": "Production Environement"
    }
  ],
  "paths": {
    "/Campaign": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get Campaigns",
        "description": "Retreive all the campaigns",
        "responses": {
          "200": {
            "description": "A list of Campaigns.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignClientView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignClientView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignClientView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get a specific Campaign",
        "description": "Retrieve a specific campaign by its ID",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The unique identifier of the campaign.\n\nRetreive it in [Get Campaigns](api-reference/campaign/get-campaigns)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed view of a specific campaign.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignClientView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignClientView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignClientView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}/Active": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Set Active State for a Campaign",
        "description": "Activates or deactivates a specified campaign based on the provided state.",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The unique identifier of the campaign.\\n\\nRetreive it in [Get Campaigns](api-reference/campaign/get-campaigns)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request containing the activation state.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The active state of the campaign was successfully updated.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error if the request is invalid or the operation fails.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/Calls": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get Campaign Call History",
        "description": "Retrieves the call history for campaigns giving specific dates",
        "requestBody": {
          "description": "The criteria for searching the call history.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call history of campaigns.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}/Calls": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get Calls by Dates for a Campaign",
        "description": "Retrieves the calls within a specific date range for a given campaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign's unique identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The search criteria including date range and sorting parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calls within the specified date range for the campaign.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}/Leads": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get Campaign Leads",
        "description": "Retrieves the leads associated with a specific campaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The unique identifier of the campaign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Search criteria for the leads.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeadSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of leads for the campaign.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeadViewTableSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadViewTableSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadViewTableSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}/Lead": {
      "put": {
        "tags": [
          "Campaign"
        ],
        "summary": "Add a Lead to a Campaign",
        "description": "Adds a new lead to a specified campaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign's unique identifier where the lead will be added.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The lead information to be added to the campaign.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadToAdd"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadToAdd"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LeadToAdd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Details of the added lead.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeadView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}/Lead/{leadId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "summary": "Get Specific Campaign Lead",
        "description": "Retrieves details of a specific lead within a campaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The unique identifier of the campaign.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "leadId",
            "in": "path",
            "description": "The unique identifier of the lead.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specific lead.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCallsView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCallsView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadCallsView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Campaign/{campaignId}/Lead/{leadId}/Status/{status}": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "summary": "Set Status for a Campaign Lead",
        "description": "Updates the status of a specific lead within a campaign",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign's unique identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "leadId",
            "in": "path",
            "description": "The unique identifier of the lead whose status is to be updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "path",
            "description": "The new status to set for the lead.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/eLeadStatusView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status update result.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Client/CreditBalance": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get Credit Balance",
        "description": "Retrieves the current credit balance",
        "responses": {
          "200": {
            "description": "Current credit balance of the client.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/ClientPhoneNumber": {
      "get": {
        "tags": [
          "ClientPhoneNumber"
        ],
        "summary": "Get Active Phone Numbers",
        "description": "Retrieves all active phone numbers associated with the logged-in client",
        "responses": {
          "200": {
            "description": "List of active phone numbers for the client.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientPhoneNumberView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientPhoneNumberView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientPhoneNumberView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred during the retrieval process.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/ConversationFlow": {
      "get": {
        "tags": [
          "ConversationFlow"
        ],
        "summary": "Get Pearls",
        "description": "Retrieves all Pearls Created",
        "responses": {
          "200": {
            "description": "List of all Pearls for the client.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationFlowView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationFlowView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationFlowView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred during the retrieval process.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/ConversationFlow/{conversationFlowId}": {
      "get": {
        "tags": [
          "ConversationFlow"
        ],
        "summary": "Get Specific Pearl",
        "description": "Retrieves a specific Pearl",
        "parameters": [
          {
            "name": "conversationFlowId",
            "in": "path",
            "description": "The unique identifier of the Conversation Flow.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed view of a specific Pearl.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationFlowView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationFlowView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationFlowView"
                }
              }
            }
          },
          "400": {
            "description": "Error occurred during the retrieval process.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Inbound": {
      "get": {
        "tags": [
          "Inbound"
        ],
        "summary": "Get Inbounds",
        "description": "Retrieves all inbounds",
        "responses": {
          "200": {
            "description": "List of all inbound for the client.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboundClientView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboundClientView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboundClientView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Inbound/{InboundId}": {
      "get": {
        "tags": [
          "Inbound"
        ],
        "summary": "Get Specific Inbound",
        "description": "Retrieves a specific inbound by its ID",
        "parameters": [
          {
            "name": "InboundId",
            "in": "path",
            "description": "The unique identifier of the inbound.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specific inbound.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InboundClientView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundClientView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboundClientView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Inbound/{inboundId}/Active": {
      "post": {
        "tags": [
          "Inbound"
        ],
        "summary": "Set Active State for Inbound",
        "description": "Run or Pause a specific inbound",
        "parameters": [
          {
            "name": "inboundId",
            "in": "path",
            "description": "The unique identifier of the inbound.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request containing the desired active state.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The active state of the inbound.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/eActivityStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eActivityStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/eActivityStatus"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Inbound/Calls": {
      "post": {
        "tags": [
          "Inbound"
        ],
        "summary": "Get Inbounds Call History",
        "description": "Retrieves the call history of inbounds",
        "requestBody": {
          "description": "The criteria for searching the call history.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call history of inbound.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Inbound/{inboundId}/Calls": {
      "post": {
        "tags": [
          "Inbound"
        ],
        "summary": "Get Calls by Dates for Inbound",
        "description": "Retrieves the calls within a specific date range of inbound",
        "parameters": [
          {
            "name": "inboundId",
            "in": "path",
            "description": "The unique identifier of the inbound configuration.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The search criteria including date range and sorting parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Calls within the specified date range for inbound.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get All Invoices",
        "description": "Retrieves all invoices",
        "responses": {
          "200": {
            "description": "List of all invoices for the client.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error occurred during the retrieval process.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Outbound": {
      "get": {
        "tags": [
          "Outbound"
        ],
        "summary": "Get All Outbound Views",
        "description": "Retrieves all outbounds",
        "responses": {
          "200": {
            "description": "List of all outbounds",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutboundClientView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutboundClientView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutboundClientView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Outbound"
        ],
        "summary": "Add Outbound Activity",
        "description": "Create a new outbound",
        "requestBody": {
          "description": "The outbound request data for creating a new outbound activity.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateOutboundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateOutboundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateOutboundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added outbound activity.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Outbound/{outboundId}": {
      "get": {
        "tags": [
          "Outbound"
        ],
        "summary": "Get Specific Outbound",
        "description": "Retrieves a specific outbound by its ID",
        "parameters": [
          {
            "name": "outboundId",
            "in": "path",
            "description": "The unique identifier of the outbound.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specific outbound activity.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Outbound"
        ],
        "summary": "Update Outbound Activity",
        "description": "Updates an existing outbound",
        "parameters": [
          {
            "name": "outboundId",
            "in": "path",
            "description": "The unique identifier of the outbound to be updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The outbound request data for updating the outbound activity.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateOutboundRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateOutboundRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUpdateOutboundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated outbound activity.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutboundClientView"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Outbound/{outboundId}/Calls": {
      "post": {
        "tags": [
          "Outbound"
        ],
        "summary": "Get Outbound Call History by Dates",
        "description": "Retrieves the call history for a specific outbound activity within a maximum of 30 days",
        "parameters": [
          {
            "name": "outboundId",
            "in": "path",
            "description": "The unique identifier of the outbound.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The criteria for searching the call history.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TableDateSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Call history of the specific outbound activity.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallTypeHistoryTableSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Outbound/{outboundId}/SetActiveState": {
      "put": {
        "tags": [
          "Outbound"
        ],
        "summary": "Set Active State for Outbound",
        "description": "Run or Pause a specific outbound activity",
        "parameters": [
          {
            "name": "outboundId",
            "in": "path",
            "description": "The unique identifier of the outbound.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request containing the desired active state.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetActiveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The active state of the outbound activity.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/eActivityStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eActivityStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/eActivityStatus"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Outbound/{outboundId}/MakeCall": {
      "post": {
        "tags": [
          "Outbound"
        ],
        "summary": "Make Outbound Call",
        "description": "Initiates a call for a specific Outbound",
        "parameters": [
          {
            "name": "outboundId",
            "in": "path",
            "description": "The unique identifier of the outbound.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The request containing the phone number to make the call to.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutboundMakeCallRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OutboundMakeCallRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OutboundMakeCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of the outbound call attempt.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Status": {
      "get": {
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Voices": {
      "get": {
        "tags": [
          "Voices"
        ],
        "summary": "Get All Voices",
        "description": "Retrieves all voices available",
        "responses": {
          "200": {
            "description": "List of all available voices.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceView"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceView"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddUpdateOutboundRequest": {
        "type": "object",
        "properties": {
          "phoneNumberId": {
            "type": "string",
            "description": "The identifier of the phone number to be used for the outbound activity. This is optional.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the outbound activity.",
            "nullable": true
          },
          "conversationFlowId": {
            "type": "string",
            "description": "The identifier of the conversation flow associated with the outbound activity.",
            "nullable": true
          },
          "totalAgents": {
            "type": "integer",
            "description": "The total number of agents assigned to handle the outbound activity.",
            "format": "int32"
          },
          "callWebhook": {
            "type": "string",
            "description": "The webhook URL to be called after each call is made during the outbound activity. This is optional.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the data required to create or update an outbound activity."
      },
      "AgentChatMessageView": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/eChatMessageRoleView"
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarEventView": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CallCollectedDataView": {
        "type": "object",
        "properties": {
          "transcript": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentChatMessageView"
            },
            "nullable": true
          },
          "collectedInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectedInfoView"
            },
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "calendarBookedEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarEventView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallHistorySource": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallHistoryView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the call history entry, represented as an ObjectId.",
            "nullable": true
          },
          "relatedId": {
            "type": "string",
            "description": "The identifier linking this call to a related entity or event.",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/eCallStatus"
          },
          "callType": {
            "$ref": "#/components/schemas/eCallType"
          },
          "processStartTime": {
            "type": "string",
            "description": "The start time of the call processing.",
            "format": "date-time"
          },
          "processEndTime": {
            "type": "string",
            "description": "The end time of the call processing.",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "The destination phone number of the call.",
            "nullable": true
          },
          "from": {
            "type": "string",
            "description": "The originating phone number of the call.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the person or entity associated with the call.",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "A summary of the call, providing key information or outcomes.",
            "nullable": true
          },
          "processDuration": {
            "type": "integer",
            "description": "The total duration of the call process, in seconds.",
            "format": "int32"
          },
          "recording": {
            "type": "string",
            "description": "A link or identifier for accessing the recording of the call.",
            "nullable": true
          },
          "collectedData": {
            "$ref": "#/components/schemas/CallCollectedDataView"
          },
          "leadId": {
            "type": "string",
            "description": "The identifier of the lead associated with this call, if applicable.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallTypeHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the call history entry, represented as an ObjectId.",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/CallHistorySource"
          },
          "status": {
            "$ref": "#/components/schemas/eCallStatus"
          },
          "callType": {
            "$ref": "#/components/schemas/eCallType"
          },
          "processStartTime": {
            "type": "string",
            "description": "The start time of the call processing.",
            "format": "date-time"
          },
          "relatedId": {
            "type": "string",
            "description": "An identifier linking the call to is related activitie may be campaignId InboundId etc...",
            "nullable": true
          },
          "relatedStatus": {
            "type": "integer",
            "description": "The status of the related entity or event at the time of the call.",
            "format": "int32"
          },
          "from": {
            "type": "string",
            "description": "The originating number of the call.",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "The destination number of the call.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the prospect\n\n it is displayed in two case \n\n-1. if the lead name have been collected during the call \n\n-2. if this is a campaign lead and he have a name.",
            "nullable": true
          },
          "processDuration": {
            "type": "integer",
            "description": "The total duration of the call process, in seconds.",
            "format": "int32"
          },
          "recording": {
            "type": "string",
            "description": "A link for accessing the recording of the call.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CallTypeHistoryTableSearchResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallTypeHistory"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignClientView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the campaign, represented as an ObjectId.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the campaign.",
            "nullable": true
          },
          "totalLeads": {
            "type": "integer",
            "description": "The total number of leads targeted by the campaign.",
            "format": "int32"
          },
          "totalCalls": {
            "type": "integer",
            "description": "The total number of calls made in the campaign.",
            "format": "int32"
          },
          "totalLeadsCompleted": {
            "type": "integer",
            "description": "The number of leads that have been completely processed.",
            "format": "int32"
          },
          "totalLeadsSuccess": {
            "type": "integer",
            "description": "The number of successful leads that achieved the desired outcome.",
            "format": "int32"
          },
          "phoneNumberId": {
            "type": "string",
            "description": "The unique identifier of the phone number used in the campaign.\n\nIf null, the campaign uses the default phone number of the region.\n\nSee [Phone Numbers Page](pages/phone_numbers) for more details.",
            "nullable": true
          },
          "phoneNumberName": {
            "type": "string",
            "description": "The name associated with the phone number used in the campaign.",
            "nullable": true
          },
          "conversationFlowId": {
            "type": "string",
            "description": "The unique identifier for the Pearl used in the campaign.",
            "nullable": true
          },
          "conversationFlowName": {
            "type": "string",
            "description": "The name of the Pearl used in the campaign.",
            "nullable": true
          },
          "budgetTotal": {
            "type": "number",
            "description": "The total budget allocated for the campaign.",
            "format": "double",
            "nullable": true
          },
          "budgetConsumed": {
            "type": "number",
            "description": "The amount of the budget that has already been consumed.",
            "format": "double"
          },
          "totalAgents": {
            "type": "integer",
            "description": "The total number of agents simultaniously participating in the campaign.",
            "format": "int32"
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayWorkingHours"
            },
            "description": "The work schedule for the campaign, detailing each day's working hours.",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "The time zone in which the campaign operates.",
            "nullable": true
          },
          "activityStatus": {
            "$ref": "#/components/schemas/eActivityStatus"
          },
          "callWebhook": {
            "type": "string",
            "description": "The webhook URL to be called after each call is made.",
            "nullable": true
          },
          "leadWebhook": {
            "type": "string",
            "description": "The webhook URL to be called for each lead processed.",
            "nullable": true
          },
          "language": {
            "$ref": "#/components/schemas/eLanguage"
          },
          "voiceId": {
            "type": "string",
            "description": "The unique identifier of the voice used in the campaign.",
            "nullable": true
          },
          "voiceName": {
            "type": "string",
            "description": "The name of the voice used in the campaign.",
            "nullable": true
          },
          "agentName": {
            "type": "string",
            "description": "The name of the agent chosed for the campaign.",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "The date and time when the campaign was created.",
            "format": "date-time"
          },
          "totalTodayCalls": {
            "type": "integer",
            "description": "The total number of calls made today in the campaign.",
            "format": "int32"
          },
          "countryCode": {
            "$ref": "#/components/schemas/eCountryCode"
          }
        },
        "additionalProperties": false
      },
      "ClientPhoneNumberView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the Client Phone Number, represented as an ObjectId.",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "The phone number associated with the client.",
            "nullable": true
          },
          "purchaseDate": {
            "type": "string",
            "description": "The date and time when the phone number was purchased.",
            "format": "date-time"
          },
          "scheduledDeletionTime": {
            "type": "string",
            "description": "The scheduled time for the deletion of the phone number, if applicable. This can be null if there is no scheduled deletion.",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ePhoneNumberStatus"
          }
        },
        "additionalProperties": false
      },
      "CollectedInfoView": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConversationFlowView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the conversation flow.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the conversation flow.",
            "nullable": true
          },
          "voiceId": {
            "type": "string",
            "description": "The unique identifier of the voice used in the conversation.",
            "nullable": true
          },
          "voiceName": {
            "type": "string",
            "description": "The name of the voice used in the conversation.",
            "nullable": true
          },
          "agentPersonalityId": {
            "type": "string",
            "description": "The unique identifier for the agent's personality profile.",
            "nullable": true
          },
          "agentPersonalityName": {
            "type": "string",
            "description": "The name of the agent's personality profile.",
            "nullable": true
          },
          "agentName": {
            "type": "string",
            "description": "The name of the agent involved in the conversation.",
            "nullable": true
          },
          "language": {
            "$ref": "#/components/schemas/eLanguage"
          },
          "totalCampaigns": {
            "type": "integer",
            "description": "The total number of campaigns associated with this conversation.",
            "format": "int32"
          },
          "totalInbound": {
            "type": "integer",
            "description": "The total number of inbound calls associated with this conversation.",
            "format": "int32"
          },
          "totalOutbound": {
            "type": "integer",
            "description": "The total number of outbound calls associated with this conversation.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "\n\n`0 - Sunday`\n\n`1 - Monday`\n\n`2 - Tuesday`\n\n`3 - Wednesday`\n\n`4 - Thursday`\n\n`5 - Friday`\n\n`6 - Saturday`\n\n",
        "format": "int32"
      },
      "DayWorkingHours": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "start": {
            "type": "string",
            "format": "date-span"
          },
          "end": {
            "type": "string",
            "format": "date-span"
          }
        },
        "additionalProperties": false
      },
      "InboundClientView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the inbound client, represented as an ObjectId.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the inbound client or campaign.",
            "nullable": true
          },
          "conversationFlowId": {
            "type": "string",
            "description": "The identifier of the conversation flow used by the inbound client.",
            "nullable": true
          },
          "totalAgents": {
            "type": "integer",
            "description": "The total number of agents assigned to handle calls for this client.",
            "format": "int32"
          },
          "activityStatus": {
            "$ref": "#/components/schemas/eActivityStatus"
          },
          "created": {
            "type": "string",
            "description": "The creation date and time of the inbound client record.",
            "format": "date-time"
          },
          "callWebhook": {
            "type": "string",
            "description": "The webhook URL to be called after each call is made.",
            "nullable": true
          },
          "phoneNumberId": {
            "type": "string",
            "description": "The identifier of the phone number assigned to the inbound client.",
            "nullable": true
          },
          "waitingSentence": {
            "type": "string",
            "description": "A predefined sentence to be said to callers while waiting, if applicable.",
            "nullable": true
          },
          "waitingSoundId": {
            "type": "string",
            "description": "The identifier for a sound file to be played while callers are on hold.",
            "nullable": true
          },
          "isSayQueueDetails": {
            "type": "boolean",
            "description": "Indicates whether to provide callers with details about their position in the queue."
          },
          "language": {
            "$ref": "#/components/schemas/eLanguage"
          },
          "voiceId": {
            "type": "string",
            "description": "The identifier of the voice used for automated responses in the inbound setup.",
            "nullable": true
          },
          "voiceName": {
            "type": "string",
            "description": "The name of the voice used for automated responses.",
            "nullable": true
          },
          "agentName": {
            "type": "string",
            "description": "The name of the agent or representative primarily responsible for the inbound client.",
            "nullable": true
          },
          "conversationFlowName": {
            "type": "string",
            "description": "The name of the conversation flow used by the inbound client.",
            "nullable": true
          },
          "phoneNumberName": {
            "type": "string",
            "description": "The name associated with the phone number used by the inbound client.",
            "nullable": true
          },
          "totalTodayCalls": {
            "type": "integer",
            "description": "The total number of calls received by the inbound client today.",
            "format": "int32"
          },
          "totalOngoingCalls": {
            "type": "integer",
            "description": "The current number of ongoing calls handled by the inbound client.",
            "format": "int32"
          },
          "totalOnQueue": {
            "type": "integer",
            "description": "The number of calls currently in the queue waiting to be answered.",
            "format": "int32"
          },
          "totalCalls": {
            "type": "integer",
            "description": "The total number of calls handled by the inbound client since creation.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InvoiceView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the Invoice, represented as an ObjectId.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the Invoice was created.",
            "format": "date-time"
          },
          "documentID": {
            "type": "integer",
            "description": "The unique identifier for the document associated with the Invoice, if applicable.",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "The total amount billed on the Invoice, expressed in the default currency.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LeadCallsView": {
        "type": "object",
        "properties": {
          "lead": {
            "$ref": "#/components/schemas/LeadView"
          },
          "callHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallHistoryView"
            },
            "description": "A collection of CallHistoryView objects representing the call history associated with the lead.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadSearch": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "description": "Number of entries to skip for pagination.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Limit on the number of entries to return.",
            "format": "int32"
          },
          "sortProp": {
            "type": "string",
            "description": "Property name to sort by.",
            "nullable": true
          },
          "isAscending": {
            "type": "boolean",
            "description": "Whether the sort order is ascending."
          },
          "status": {
            "$ref": "#/components/schemas/eLeadStatus"
          }
        },
        "additionalProperties": false,
        "description": "Extends TableSearch to include specific search criteria for leads."
      },
      "LeadToAdd": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the lead.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the lead.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the lead.",
            "nullable": true
          },
          "timeZoneId": {
            "type": "string",
            "description": "The identifier for the time zone of the lead. This is optional.",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "An external identifier for the lead, typically used to reference data from external systems like a CRM.\r\nThis is optional but recomended and may be used for integration purposes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the data required to add a new lead to the system."
      },
      "LeadView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the lead, represented as an ObjectId.",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The identifier for the lead from an external system, such as a CRM.",
            "nullable": true
          },
          "externalSource": {
            "$ref": "#/components/schemas/eLeadExternalSource"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the lead.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the lead.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of the lead.",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the lead.",
            "nullable": true
          },
          "timeZoneId": {
            "type": "string",
            "description": "The identifier for the lead's time zone (e.g., 'America/New_York').",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/eLeadStatus"
          },
          "created": {
            "type": "string",
            "description": "The date and time when the lead was created.",
            "format": "date-time"
          },
          "statusLastModified": {
            "type": "string",
            "description": "The last time the status of the lead was modified.",
            "format": "date-time"
          },
          "originalSourceData": {
            "description": "Raw data from the original source of the lead, which might include serialized details from systems like Salesforce.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeadViewTableSearchResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeadView"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OutboundClientView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the outbound client, represented as an ObjectId.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the outbound client or campaign.",
            "nullable": true
          },
          "conversationFlowId": {
            "type": "string",
            "description": "The identifier of the conversation flow used by the outbound client.",
            "nullable": true
          },
          "phoneNumberId": {
            "type": "string",
            "description": "The identifier of the phone number used by the outbound client.",
            "nullable": true
          },
          "voiceId": {
            "type": "string",
            "description": "The identifier of the voice used for automated calls in the outbound setup.",
            "nullable": true
          },
          "agentName": {
            "type": "string",
            "description": "The name of the agent or representative primarily responsible for the outbound client.",
            "nullable": true
          },
          "totalAgents": {
            "type": "integer",
            "description": "The total number of agents assigned to handle calls for this outbound client.",
            "format": "int32"
          },
          "activityStatus": {
            "$ref": "#/components/schemas/eActivityStatus"
          },
          "created": {
            "type": "string",
            "description": "The creation date and time of the outbound client record.",
            "format": "date-time"
          },
          "callWebhook": {
            "type": "string",
            "description": "The webhook URL to be called after each call is made.",
            "nullable": true
          },
          "totalCalls": {
            "type": "integer",
            "description": "The total number of calls made by the outbound client since its creation.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OutboundMakeCallRequest": {
        "type": "object",
        "properties": {
          "toPhoneNum": {
            "type": "string",
            "description": "The phone number to which the outbound call should be made.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents the request to initiate an outbound call."
      },
      "SetActiveRequest": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "A boolean value that specifies the new active status of the entity.\r\nTrue activates the entity, while false deactivates it."
          }
        },
        "additionalProperties": false,
        "description": "Defines the request structure for setting the active status of an entity."
      },
      "TableDateSearch": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "description": "Number of entries to skip for pagination.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Limit on the number of entries to return.",
            "format": "int32"
          },
          "sortProp": {
            "type": "string",
            "description": "Property name to sort by.",
            "nullable": true
          },
          "isAscending": {
            "type": "boolean",
            "description": "Whether the sort order is ascending."
          },
          "from": {
            "type": "string",
            "description": "The start date for filtering the search results.",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "The end date for filtering the search results.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Extends TableSearch to include date filtering for more specific searches."
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "VoiceView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the Voice",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The Name of the Voice",
            "nullable": true
          },
          "language": {
            "$ref": "#/components/schemas/eLanguage"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The List of tags of the Voice \n\n it may include specific accents or other properties of the v",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "eActivityStatus": {
        "enum": [
          1,
          2,
          3,
          10
        ],
        "type": "integer",
        "description": "Here is the activity status\n\n`1 - Running`\n\n`2 - Paused`\n\n`3 - SystemLimited`\n\n`10 - TemporaryMaintenance`\n\n",
        "format": "int32"
      },
      "eCallStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "\n\n`1 - Queued`\n\n`2 - Ringing`\n\n`3 - InProgress`\n\n`4 - Completed`\n\n`5 - Busy`\n\n`6 - Failed`\n\n`7 - NoAnswer`\n\n`8 - Canceled`\n\n",
        "format": "int32"
      },
      "eCallType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          99
        ],
        "type": "integer",
        "description": "\n\n`1 - Campaign`\n\n`3 - Inbound`\n\n`4 - Outbound`",
        "format": "int32"
      },
      "eChatMessageRoleView": {
        "enum": [
          2,
          3
        ],
        "type": "integer",
        "description": "\n\n`2 - Pearl`\n\n`3 - Client`\n\n",
        "format": "int32"
      },
      "eCountryCode": {
        "enum": [
          1,
          2,
          33,
          44,
          61,
          972
        ],
        "type": "integer",
        "description": "\n\n`1 - UnitedStates`\n\n`2 - UnitedKingdom`\n\n`33 - Canada`\n\n`44 - Australia`\n\n`61 - Israel`\n\n`972 - France`\n\n",
        "format": "int32"
      },
      "eLanguage": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "The list of languages\n\n`0 - English`\n\n`1 - French`\n\n`2 - Italian`\n\n`3 - Spanish`\n\n`4 - Dutch`\n\n`5 - German`\n\n",
        "format": "int32"
      },
      "eLeadExternalSource": {
        "enum": [
          1,
          10
        ],
        "type": "integer",
        "description": "\n\n`1 - API`\n\n`10 - SalesForce`\n\n",
        "format": "int32"
      },
      "eLeadStatus": {
        "enum": [
          1,
          10,
          20,
          40,
          50,
          60,
          100,
          110,
          120,
          125,
          130,
          200
        ],
        "type": "integer",
        "description": "\n\n`1 - New`\n\n`10 - NeedRetry`\n\n`20 - InCallQueue`\n\n`40 - OnCall`\n\n`50 - WaitingForPostProcess`\n\n`60 - NeedFollowUp`\n\n`100 - Success`\n\n`110 - NotSuccess`\n\n`120 - WrongNumber`\n\n`125 - Uncomplete`\n\n`130 - Complete`\n\n`200 - Deleted`\n\n",
        "format": "int32"
      },
      "eLeadStatusView": {
        "enum": [
          1,
          100,
          110,
          200
        ],
        "type": "integer",
        "description": "\n\n`1 - New`\n\n`100 - Success`\n\n`110 - NotSuccess`\n\n`200 - Deleted`\n\n",
        "format": "int32"
      },
      "ePhoneNumberStatus": {
        "enum": [
          50,
          55,
          100
        ],
        "type": "integer",
        "description": "\n\n`50 - Active`\n\n`55 - ToDelete`\n\n`100 - Deleted`\n\n",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "description": "Specify the authorization token.\n\nThe _**Token**_ must be of this form `AccountId:SecretKey`.\n\n **for exemple**:\n\n `Bearer 66552698d60e456235eae520:tWPqr5EEZv2dxqutv58NsCg7NuqGc1tX` \n\n you can retreive your Account Id and Secret Key in [our platfrorm](https://platform.nlpearl.ai/app/dashboard)",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "bearer_auth": [ ]
    }
  ]
}